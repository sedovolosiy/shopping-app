import EnhancedCategorizer from './lib/categorization';

async function runTests() {
  // Initialize the categorizer
  const categorizer = new EnhancedCategorizer();

  // Test with a more comprehensive list
  const testItems = [
    '–º–æ–ª–æ–∫–æ 3.2%',
    '—Ö–ª–µ–± –±–µ–ª—ã–π', 
    '—è–π—Ü–∞ –∫—É—Ä–∏–Ω—ã–µ',
    '–æ–≥—É—Ä—Ü—ã —Å–≤–µ–∂–∏–µ',
    '–ø–æ–º–∏–¥–æ—Ä—ã –∫—Ä–∞—Å–Ω—ã–µ',
    '–∫—É—Ä–∏—Ü–∞ —Ñ–∏–ª–µ',
    '–º—è—Å–æ –≥–æ–≤—è–¥–∏–Ω–∞',
    '–∫–æ–ª–±–∞—Å–∞ –≤–∞—Ä—ë–Ω–∞—è',
    '—Ä—ã–±–∞ –ª–æ—Å–æ—Å—å',
    '–º–∞–∫–∞—Ä–æ–Ω—ã',
    '—Ä–∏—Å',
    '—Å–∞—Ö–∞—Ä',
    '–∫–æ—Ñ–µ —Ä–∞—Å—Ç–≤–æ—Ä–∏–º—ã–π',
    '—á–∞–π –∑–µ–ª—ë–Ω—ã–π',
    '–ø–∏–≤–æ —Å–≤–µ—Ç–ª–æ–µ',
    '—à–∞–º–ø—É–Ω—å',
    '–º—ã–ª–æ',
    '–±–∏–æ –º–æ–ª–æ–∫–æ',
    '–≤–µ–≥–∞–Ω—Å–∫–∏–π —Å—ã—Ä',
    '–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ —è–±–ª–æ–∫–∏'
  ];

  console.log('üîç Comprehensive categorization test with all fixed patterns:\n');

  // Test each item sequentially
  for (const item of testItems) {
    try {
      const result = await categorizer.categorizeItem(item, 'grocery', 'ru');
      
      if (result && result.category) {
        console.log(`‚úÖ "${item}" ‚Üí ${result.category} (${result.confidence.toFixed(2)})`);
      } else {
        console.log(`‚ùå "${item}" ‚Üí No category found`);
      }
    } catch (error) {
      console.log(`‚ùå "${item}" ‚Üí Error: ${error}`);
    }
  }

  console.log('\nüéØ Testing specific problematic items:');
  const problemItems = ['–º–æ–ª–æ–∫–æ', '—Ö–ª–µ–±', '–æ–≥—É—Ä—Ü—ã', '–ø–æ–º–∏–¥–æ—Ä—ã'];

  for (const item of problemItems) {
    try {
      const result = await categorizer.categorizeItem(item, 'grocery', 'ru');
      console.log(`\n--- ${item} ---`);
      console.log(`Category: ${result?.category || 'NONE'}`);
      console.log(`Confidence: ${result?.confidence?.toFixed(2) || 'N/A'}`);
      if (result?.matchedKeywords) {
        console.log(`Matched keywords: ${result.matchedKeywords.join(', ')}`);
      }
    } catch (error) {
      console.log(`\n--- ${item} ---`);
      console.log(`Error: ${error}`);
    }
  }
}

runTests().catch(console.error);
