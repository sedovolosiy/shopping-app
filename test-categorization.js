// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏
const { EnhancedCategorizer } = require("./lib/categorization/index.ts");

async function testCategorization() {
  console.log("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏...\n");

  const categorizer = new EnhancedCategorizer();

  // –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã
  const testItems = ["–º–æ–ª–æ–∫–æ", "—Ö–ª–µ–±", "—è–π—Ü–∞", "–º—è—Å–æ", "–æ–≥—É—Ä—Ü—ã", "–ø–æ–º–∏–¥–æ—Ä—ã"];

  console.log('üì¶ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ "biedronka":\n');

  for (const item of testItems) {
    try {
      console.log(`\n--- –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä: "${item}" ---`);
      const result = await categorizer.categorizeItem(item, "biedronka", "ru");
      console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:`, {
        category: result.category,
        categoryOrder: result.categoryOrder,
        confidence: result.confidence,
        matchedKeywords: result.matchedKeywords,
        appliedRules: result.appliedRules,
      });
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ "${item}":`, error);
    }
  }
}

testCategorization().catch(console.error);
